from aiogram import types

from bot.database.models.sub import Sub
from bot.keyboards.inline.admin import admin_menu_markup, admin_sub_markup, admin_sub_list_markup, \
    admin_del_sub



async def admin_menu(message: types.Message):
    """–ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω –º–µ–Ω—é"""
    return await message.answer(
        text="""
<b>–ê–¥–º–∏–Ω –º–µ–Ω—é</b>

<code>üîπ–ö–æ–º–∞–Ω–¥—ã:</code>
""",
        reply_markup=admin_menu_markup()
    )



async def sub_main(message: types.Message):
    """–æ–±—è–∑ –ø–æ–¥–ø–∏—Å–∫–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""

    return await message.answer(
        text="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
        reply_markup=admin_sub_markup()
    )


async def get_active_subs(message: types.Message):
    """–≤—ã–≤–æ–¥ –∞–∫—Ç–∏–≤–Ω—ã—Ö –û–ü"""
    subs_list = Sub.filter(is_active=True).all()

    if await subs_list.count() == 0:
        await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –û–ü")
        return await sub_main(message)

    subs_list = [
        [s.id, s.title, s.is_bot] for s in await subs_list
    ]

    await message.answer(
        text="–í—ã–±—Ä–∞—Ç—å:",
        reply_markup=admin_sub_list_markup(subs_list)
    )


async def sub_info(message: types.Message, sub_id: int):
    sub = await Sub.get(id=sub_id)

    await message.answer(
        text=f"""
–î–∞–Ω–Ω—ã–µ –ø–æ –û–ü

–†–µ—Å—É—Ä—Å: {'ü§ñ' if sub.is_bot else 'üö™'}
{'–¢–æ–∫–µ–Ω –±–æ—Ç–∞' if sub.is_bot else 'ID –∫–∞–Ω–∞–ª–∞'}: <code>{sub.bot_token}</code>
–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏: <code>{sub.title}</code>
–°—Å—ã–ª–∫–∞: <code>{sub.link}</code>

–ü–µ—Ä–µ—Ö–æ–¥–æ–≤: <code>{sub.visits}</code>
""",
        reply_markup=admin_del_sub(sub_id)
    )



async def check_token_valid(bot_token: str, session) -> bool:
    from aiogram import Bot
    try:
        bot = Bot(token=bot_token, session=session)
        await bot.get_me()
        return True
    except:
        return False