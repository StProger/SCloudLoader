from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from bot.keyboards.inline.user import main_inline, main_inline_admin
from bot.keyboards.inline.user import download_track_inline
from bot.keyboards.inline.user import choose_crypto_inline
from bot.keyboards.inline.user import choose_card_inline

from bot.service.redis_serv.user import set_msg_to_delete
from bot.service.payments.crypto_cloud.expecting_paid import expecting_paid_crypto
from bot.service.payments.crypto_cloud.crypto_cloud import CryptoCloud
from bot.service.redis_serv.user import set_pay_msg_delete
from bot.service.payments.lava.lava import LavaPayment
from bot.service.payments.lava.expecting_pay import expecting_paid_lava

from bot.settings import settings

from bot.database.models.orders import Order
from bot.database.models.user import User

import asyncio


async def main_menu(message: Message):

    await message.answer(
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_inline()
    )


async def main_menu_admin(message: Message):

    await message.answer(
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_inline_admin()
    )



async def callback_main_menu(callback: CallbackQuery):

    await callback.message.edit_text(
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_inline()
    )

async def callback_main_admin_menu(callback: CallbackQuery):

    await callback.message.edit_text(
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_inline_admin()
    )


async def download_track(
        callback: CallbackQuery
):

    await set_msg_to_delete(
        callback.from_user.id,
        (await callback.message.edit_text(
        text="""
–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É —Ç—Ä–µ–∫–∞ üîó –Ω–∞ SoundCloud üëá
""",
        reply_markup=download_track_inline()
            )).message_id
    )


async def crypto_menu(callback: CallbackQuery):

    PRICES = settings.PRICES

    text = f"""1 –º–µ—Å—è—Ü - <b>{PRICES['crypto'][1]['price']}‚ÇΩ</b>
3 –º–µ—Å—è—Ü–∞ - <b>{PRICES['crypto'][3]['price']}‚ÇΩ</b> ({PRICES['crypto'][3]['month']} –∑–∞ –º–µ—Å—è—Ü)
6 –º–µ—Å—è—Ü–µ–≤ - <b>{PRICES['crypto'][6]['price']}‚ÇΩ</b> ({PRICES['crypto'][6]['month']} –∑–∞ –º–µ—Å—è—Ü)"""

    await callback.message.edit_text(
        text=text,
        reply_markup=choose_crypto_inline()
    )


async def card_menu(callback: CallbackQuery):

    PRICES = settings.PRICES

    text = f"""1 –º–µ—Å—è—Ü - <b>{PRICES['card'][1]['price']}‚ÇΩ</b>
3 –º–µ—Å—è—Ü–∞ - <b>{PRICES['card'][3]['price']}‚ÇΩ</b> 
6 –º–µ—Å—è—Ü–µ–≤ - <b>{PRICES['card'][6]['price']}‚ÇΩ</b>"""

    await callback.message.edit_text(
        text=text,
        reply_markup=choose_card_inline()
    )


async def create_invoice_crypto_pay(
        callback: CallbackQuery,
        user: User
):

    PRICES = settings.PRICES
    count_month = int(callback.data.split("_")[-1])
    order: Order = await Order.create(
        count_month=count_month,
        user_id=callback.from_user.id
    )

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∏–Ω–≤–æ–π—Å –Ω–∞ –æ–ø–ª–∞—Ç—É
    new_invoice = await CryptoCloud.create_invoice(
        amount=PRICES["crypto"][count_month]['price'],
        order_id=order.order_id,
        bot_session=callback.bot.session
    )
    print(new_invoice)
    link_pay_inline = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–û–ø–ª–∞—Ç–∏—Ç—å", url=new_invoice["link"]
                )
            ]
        ]
    )

    uuid_merchant = new_invoice["uuid"]

    # –°–æ–∑–¥–∞—ë–º —Ç–∞—Å–∫—É –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
    asyncio.create_task(
        expecting_paid_crypto(
            bot_session=callback.bot.session,
            user_id=callback.from_user.id,
            user=user,
            uuid=uuid_merchant,
            order=order,
            bot=callback.bot
        )
    )

    await set_pay_msg_delete(callback.from_user.id,
                             (await callback.message.edit_text(
                                text="–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá.\n"
                                     "–£ –≤–∞—Å –µ—Å—Ç—å <b>10 –º–∏–Ω—É—Ç</b> –¥–ª—è –æ–ø–ª–∞—Ç—ã.",
                                reply_markup=link_pay_inline
                                )).message_id)


async def create_invoice_card_pay(
        callback: CallbackQuery,
        user: User
):

    PRICES = settings.PRICES
    count_month = int(callback.data.split("_")[-1])
    order: Order = await Order.create(
        count_month=count_month,
        user_id=callback.from_user.id
    )

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∏–Ω–≤–æ–π—Å –Ω–∞ –æ–ø–ª–∞—Ç—É
    new_invoice = await LavaPayment.create_invoice(
        amount=float(PRICES["crypto"][count_month]['price']),
        order=order,
        bot_session=callback.bot.session
    )

    link_pay_inline = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–û–ø–ª–∞—Ç–∏—Ç—å", url=new_invoice["link"]
                )
            ]
        ]
    )

    invoice_id = new_invoice["uuid"]

    # –°–æ–∑–¥–∞—ë–º —Ç–∞—Å–∫—É –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
    asyncio.create_task(
        expecting_paid_lava(
            bot_session=callback.bot.session,
            user_id=callback.from_user.id,
            user=user,
            invoice_id=invoice_id,
            order=order,
            bot=callback.bot
        )
    )

    await set_pay_msg_delete(callback.from_user.id,
                             (await callback.message.edit_text(
                                 text="–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá.\n"
                                      "–£ –≤–∞—Å –µ—Å—Ç—å <b>10 –º–∏–Ω—É—Ç</b> –¥–ª—è –æ–ø–ª–∞—Ç—ã.",
                                 reply_markup=link_pay_inline
                             )).message_id)



async def referal_system(
        callback: CallbackQuery,
        user: User
):
    user_id = callback.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º username –±–æ—Ç–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    bot_info = await callback.bot.get_me()
    username_bot = bot_info.username

    ref_link = f"https://t.me/{username_bot}?start={user_id}"

    count_referals = await user.get_count_ref()

    msg_text = f"""
–•–æ—á–µ—à—å –ø–æ–¥–ø–∏—Å–∫—É, –Ω–µ —Ç—Ä–∞—Ç—è –¥–µ–Ω–µ–≥?

–í—Å—ë —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–∫–∏–Ω—É—Ç—å —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º —ç—Ç—É —Å—Å—ã–ª–∫—É ‚Äî <code>{ref_link}</code>

–ï—Å–ª–∏ —Ç–≤–æ–π –¥—Ä—É–≥ –ø–µ—Ä–µ–π–¥—ë—Ç –ø–æ —Å—Å—ã–ª–∫–µ, —Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏!

–ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π ‚Äî —Å–∞–º—ã–π –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–±, –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å –Ω–∞–º, –∞ —Ç–∞–∫–∂–µ –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É!

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –ø–æ–¥–¥–µ—Ä–∂–∫—É üíõ

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {count_referals}"""

    await callback.message.edit_text(
        text=msg_text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="–ú–µ–Ω—é", callback_data="menu"
                    )
                ]
            ]
        )
    )


async def admin_panel_main(callback: CallbackQuery):

    await callback.message.edit_text(
        text="""
<b>–ê–¥–º–∏–Ω –º–µ–Ω—é</b>

<code>üîπ–ö–æ–º–∞–Ω–¥—ã:</code>
        """,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚úÖ",
                        callback_data="switch_on_sub"
                    ),
                    InlineKeyboardButton(
                        text="–í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚ùå",
                        callback_data="switch_off_sub"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîê –û–±—è–∑. –ü–æ–¥–ø–∏—Å–∫–∞",
                        callback_data="sub"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üì® –†–∞—Å—Å—ã–ª–∫–∞",
                        callback_data="admin_mailing"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="–ú–µ–Ω—é",
                        callback_data="menu"
                    )
                ]
            ]
        )
    )